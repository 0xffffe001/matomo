{% extends 'admin.twig' %}

{% set title %}{{ 'PrivacyManager_GDPR'|translate }}{% endset %}

{% block content %}
    <div piwik-content-block content-title="How do I ask for consent?">
        <p>
            The Matomo JavaScript Tracker lets you require consent in case you track for example personal data and do not
            have a legitimate interest.
        </p>
        <h3>Step 1, requiring consent</h3>
        <p>
            To require consent, call <code>_paq.push(['requireConsent'])</code> on every page view. When consent is required, no
            tracking request will be sent to the Matomo tracking server until the user has given consent.<br />
            Please note that when consent is required, we will temporarily set cookies but not track any data. These
            cookies will only exist during this page view and deleted as soon as the user navigates to a different page
            or closes the browser.
        </p>
        <h3>Step 2, asking for consent</h3>
        <p>Now you can ask the user for consent for example by showing a popup or a setting somewhere. Matomo does
            not offer the feature to show a popup yet, but may implement such a feature to gather consent in the future.

            <br /><br />
            When the user has given consent, you have two choices.
            <br />
        </p>
        <h3>Step 3a, user gives consent</h3>
        <p>
            You store the information that the user has given consent to be tracked yourself for example in a cookie,
            or in your platform and on every page view you call <code>_paq.push(['setConsentGiven'])</code> after
             calling <code>_paq.push(['requireConsent'])</code>. This lets the JavaScript tracker know that the user
            has given consent and ensures the tracking is working as expected. Alternatively, when the user has given consent,
            you could also avoid calling <code>_paq.push(['requireConsent'])</code> in the first place. When you call
            <code>setConsentGiven</code>, Matomo will not remember on subsequent requests that the user has given consent.
        </p>
        <h3>Step 3b, user gives consent</h3>
        <p>
            Alternatively, you can let Matomo remember that the user has given consent by calling <code>_paq.push(['rememberConsentGiven', optionallyExpireConsentInHours])</code>
            once the user has given her or his consent. This means Matomo will remember on subsequent requests that
            the user has given his or her consent by setting a cookie named "consent" and the required consent will be automatically ignored while the cookie exists.
            This means when you call <code>_paq.push(['rememberConsentGiven'])</code> once, you do not need to call
            <code>_paq.push(['setConsentGiven'])</code> on each page view.
            <br />
        </p>

        <div class="alert alert-info">
            Please note that this feature requires you to set the `cookieDomain` and `cookiePath` correctly and requires
            that you do not disable cookies. Please also note that when you call this method, consent will be implied
            for all sites that match the configured cookieDomain and cookiePath. Depending on your website structure,
            you may need to restrict or widen the scope of the cookie domain/path to ensure the consent is applied
            to the sites you want.
        </div>
        <p>
            <h3>Step 4, user removes consent</h3>
            If you went with "Step 3a" and the user has expressed she or he no longer gives consent, you shall not call the
            method <code>setConsentGiven</code> anymore. If you went with "Step 3b", you need to call <code>_paq.push(['forgetConsentGiven'])</code>
            once to make sure the cookie that remembered the given consent is deleted.
        </p>
    </div>
{% endblock %}
